name: ZGit - Deploy Library iOS

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
# uncoment if you want to run this file
  # workflow_dispatch:
  #   inputs:
  #     version:
  #       description: "Version : "
  #       required: true
  #       default: ""
  #       type: string

jobs:
  deploy_library:
    name: Deploy Library
    runs-on: macos-14
    timeout-minutes: 100

    steps:
      - name: Validate Version Input
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ -z "$VERSION" ]]; then
            echo "Version input is required."
            exit 1
          fi
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Use semantic versioning (e.g., 1.0.0)."
            exit 1
          fi

      - name: Print Inputs
        run: |
          echo "version": "${{ github.event.inputs.version }}"

      - name: Setup Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.3.app

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Cache Swift Packages
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: |
            Pods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-cocoapods-

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true

      - name: Grant Execution Permission for Build Script
        run: chmod +x build_library_xcframework.sh

      - name: Build Library XCFramework
        run: |
          ./build_library_xcframework.sh
        env:
          version: ${{ github.event.inputs.version }}

      - name: Verify XCFramework Build
        run: |
          if [ ! -f "KompasIdLibary.xcframework.zip" ]; then
            echo "XCFramework ZIP not found!"
            exit 1
          fi
        shell: bash

      - name: Upload XCFramework ZIP as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: KompasIdLibary.xcframework.zip
          path: KompasIdLibary.xcframework.zip

      - name: Push Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "${{ vars.CONFIG_USER_NAME }}"
          git config --global user.email "${{ vars.CONFIG_USER_EMAIL }}"
          git tag -a ${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} ${{ github.event.inputs.version }}

      - name: Create or Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.event.inputs.version }} \
            KompasIdLibary.xcframework.zip \
            --notes "XCFramework for version ${{ github.event.inputs.version }}." \
            --latest

      - name: Logging for Debugging
        run: |
          echo "Checking repository..."
          ls -al

      - name: List Files
        run: |
          ls -R

        # KompasIdLibary.xcframework.zip tidak di perlukan di taruh di master, karna sudah bisa. contoh tag versi 1.0.18
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "${{ vars.CONFIG_USER_NAME }}"
          git config --global user.email "${{ vars.CONFIG_USER_EMAIL }}"

          # Add files to Git
          git add Package.swift

          # Commit changes
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
          else
            git commit -m "Update Package.swift and KompasIdLibary.xcframework.zip for version ${{ github.event.inputs.version }}"
            # Push changes to the same branch
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          fi
