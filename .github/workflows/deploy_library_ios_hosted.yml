name: Loc - Deploy Library iOS

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version : "
        required: true
        default: ""
        type: string

defaults:
  run:
    shell: zsh --login --errexit --pipefail {0}

jobs:
  deploy_library:
    name: Deploy Library iOS
    runs-on: mk-mac-ios-01
    timeout-minutes: 100

    steps:
      - name: Validate Version Input
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ -z "$VERSION" ]]; then
            echo "Version input is required."
            exit 1
          fi
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Use semantic versioning (e.g., 1.0.0)."
            exit 1
          fi

      - name: Print Inputs
        run: |
          echo "version": "${{ github.event.inputs.version }}"

      - name: Xcode List Available
        run: ls /Applications | grep Xcode

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Grant Execution Permission for Build Script
        run: chmod +x build_library_xcframework.sh

      - name: Build Library XCFramework
        run: |
          ./build_library_xcframework.sh
        env:
          version: ${{ github.event.inputs.version }}

      - name: Verify XCFramework Build
        run: |
          if [ ! -f "Shared.xcframework.zip" ]; then
            echo "XCFramework ZIP not found!"
            exit 1
          fi
        shell: bash

      - name: Upload XCFramework ZIP as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Shared.xcframework.zip
          path: Shared.xcframework.zip

      - name: Push Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.CONFIG_USER_PAT }}
        run: |
          git config --global user.name "${{ vars.CONFIG_USER_NAME }}"
          git config --global user.email "${{ vars.CONFIG_USER_EMAIL }}"
          git tag -a ${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
          git push https://x-access-token:${{ secrets.CONFIG_USER_PAT }}@github.com/${{ github.repository }} ${{ github.event.inputs.version }}

      - name: Create or Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.CONFIG_USER_PAT }}
        run: |
          gh release create ${{ github.event.inputs.version }} \
            Shared.xcframework.zip \
            --notes "XCFramework for version ${{ github.event.inputs.version }}." \
            --target v1.0/dev --latest

      - name: Logging for Debugging
        run: |
          echo "Checking repository..."
          ls -al

      - name: List Files
        run: |
          ls -R

        
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.CONFIG_USER_PAT }}
        run: |
          git config --global user.name "${{ vars.CONFIG_USER_NAME }}"
          git config --global user.email "${{ vars.CONFIG_USER_EMAIL }}"

          # Add files to Git
          git add Package.swift

          # Commit changes
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
          else
            git commit -m "Update Package.swift and Shared.xcframework.zip for version ${{ github.event.inputs.version }}"
            # Push changes to the same branch
            git push https://x-access-token:${{ secrets.CONFIG_USER_PAT }}@github.com/${{ github.repository }}
          fi


