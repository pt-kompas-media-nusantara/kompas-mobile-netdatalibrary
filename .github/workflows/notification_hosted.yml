name: Loc - Notification to Ms Teams

on:
  workflow_call:
    inputs:
      webhook:
        required: true
        type: string
      github_version:
        required: true
        type: string
      github_state: # failure / success
        required: true
        type: string

defaults:
  run:
    shell: zsh --login --errexit --pipefail {0}

# concurrency:
#   group: ${{ github.ref }}-${{ github.workflow }}
#   cancel-in-progress: true

jobs:
  notificationfa:
    name: Notification to Ms Teams
    runs-on: mk-mac-ios-01
    timeout-minutes: 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Print Inputs
        run: |
          echo "webhook ${{ inputs.webhook }}"
          echo "github_version ${{ inputs.github_version }}"
          echo "github_state ${{ inputs.github_state }}"

      - name: Set Icon URL
        id: id_icon_url
        run: |
          if [[ "${{ inputs.github_state }}" == "failure" ]]; then
            echo "output_icon_url=https://img.icons8.com/flat-round/64/error--v1.png" >> $GITHUB_OUTPUT
          else
            echo "output_icon_url=https://img.icons8.com/external-anggara-filled-outline-anggara-putra/64/external-checklist-basic-user-interface-anggara-filled-outline-anggara-putra.png" >> $GITHUB_OUTPUT
          fi

      - name: Set Fullname & Email
        id: id_user_data
        run: |
          # Convert USER_DATA to a file for jq parsing
          echo '${{ vars.USER_DATA }}' > user_data.json
      
          # Find user data by matching github.actor
          user=$(jq -c --arg username "${{ github.actor }}" '.[] | select(.username == $username)' user_data.json)
      
          if [[ -n "$user" ]]; then
            fullname=$(echo "$user" | jq -r '.fullname')
            work_email=$(echo "$user" | jq -r '.work_email')
            personal_email=$(echo "$user" | jq -r '.personal_email')
      
            # Output the fullname and email
            echo "output_fullname=$fullname" >> $GITHUB_OUTPUT
            echo "output_work_email=$work_email" >> $GITHUB_OUTPUT
            echo "output_personal_email=$personal_email" >> $GITHUB_OUTPUT
          else
            echo "output_fullname=Not Found" >> $GITHUB_OUTPUT
            echo "output_work_email=Not Found" >> $GITHUB_OUTPUT
            echo "output_personal_email=Not Found" >> $GITHUB_OUTPUT
          fi

      - name: Log User Data
        run: |
          echo "${{ github.actor }}"
          echo "${{ steps.id_user_data.outputs.output_fullname }}"
          echo "${{ steps.id_user_data.outputs.output_work_email }}"
          echo "${{ steps.id_user_data.outputs.output_personal_email }}"

      - name: User Interface
        run: |
          CARD_JSON='{
            "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
            "type": "AdaptiveCard",
            "version": "1.6",
            "body": [
                  {
                      "type": "ColumnSet",
                      "columns": [
                          {
                              "type": "Column",
                              "items": [
                                  {
                                      "type": "Image",
                                      "style": "Person",
                                      "url": "${{ steps.id_icon_url.outputs.output_icon_url }}",
                                      "width": "64px",
                                      "height": "64px",
                                      "size": "Small"
                                  }
                              ],
                              "width": "auto"
                          }
                      ]
                  },
                  {
                      "type": "FactSet",
                      "facts": [
                          {
                              "title": "GH Actor",
                              "value": "${{ github.actor }}"
                          },
                          {
                              "title": "GH Name Actor",
                              "value": "<at>${{ steps.id_user_data.outputs.output_fullname }}</at>"
                          },
                          {
                              "title": "GH Email Actor",
                              "value": "${{ steps.id_user_data.outputs.output_work_email }}"
                          },
                          {
                              "title": "GH Job",
                              "value": "${{ github.job }}"
                          },
                          {
                              "title": "GH Ref",
                              "value": "${{ github.ref }}"
                          },
                          {
                              "title": "GH Workflow Ref",
                              "value": "${{ github.workflow_ref }}"
                          }
                      ],
                      "separator": true,
                      "spacing": "Medium"
                  },
                  {
                      "type": "Component",
                      "name": "graph.microsoft.com/users",
                      "view": "compact",
                      "properties": {
                          "users": [
                              {
                                  "id": "${{ steps.id_user_data.outputs.output_work_email }}",
                                  "displayName": "${{ steps.id_user_data.outputs.output_fullname }}",
                                  "userPrincipalName": "${{ steps.id_user_data.outputs.output_work_email }}"
                              }
                          ]
                      }
                  }
              ],
              "msteams": {
                  "entities": [
                      {
                          "type": "mention",
                          "text": "<at>${{ steps.id_user_data.outputs.output_fullname }}</at>",
                          "mentioned": {
                              "id": "${{ steps.id_user_data.outputs.output_work_email }}",
                              "name": "${{ steps.id_user_data.outputs.output_fullname }}"
                          }
                      }
                  ]
              }
          }'

          curl -X POST -H "Content-Type: application/json" -d "{\"type\": \"message\", \"attachments\": [{\"contentType\": \"application/vnd.microsoft.card.adaptive\", \"content\": $CARD_JSON }]}" ${{ inputs.webhook }}
        env:
          TEAMS_WEBHOOK_URL: ${{ inputs.webhook }}